Resources:
  PresenceVPC5404FC46:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.42.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: PresenceStack/PresenceVPC
    Metadata:
      aws:cdk:path: PresenceStack/PresenceVPC/Resource
  PresenceVPCRedisSubnet1Subnet08262FF3:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.42.0.0/24
      VpcId:
        Ref: PresenceVPC5404FC46
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Redis
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: PresenceStack/PresenceVPC/RedisSubnet1
    Metadata:
      aws:cdk:path: PresenceStack/PresenceVPC/RedisSubnet1/Subnet
  PresenceVPCRedisSubnet1RouteTableCA203B66:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: PresenceVPC5404FC46
      Tags:
        - Key: Name
          Value: PresenceStack/PresenceVPC/RedisSubnet1
    Metadata:
      aws:cdk:path: PresenceStack/PresenceVPC/RedisSubnet1/RouteTable
  PresenceVPCRedisSubnet1RouteTableAssociationACD8D36D:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PresenceVPCRedisSubnet1RouteTableCA203B66
      SubnetId:
        Ref: PresenceVPCRedisSubnet1Subnet08262FF3
    Metadata:
      aws:cdk:path: PresenceStack/PresenceVPC/RedisSubnet1/RouteTableAssociation
  PresenceVPCRedisSubnet2Subnet2EA1B524:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.42.1.0/24
      VpcId:
        Ref: PresenceVPC5404FC46
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Redis
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: PresenceStack/PresenceVPC/RedisSubnet2
    Metadata:
      aws:cdk:path: PresenceStack/PresenceVPC/RedisSubnet2/Subnet
  PresenceVPCRedisSubnet2RouteTable89206F36:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: PresenceVPC5404FC46
      Tags:
        - Key: Name
          Value: PresenceStack/PresenceVPC/RedisSubnet2
    Metadata:
      aws:cdk:path: PresenceStack/PresenceVPC/RedisSubnet2/RouteTable
  PresenceVPCRedisSubnet2RouteTableAssociation8EE3C076:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PresenceVPCRedisSubnet2RouteTable89206F36
      SubnetId:
        Ref: PresenceVPCRedisSubnet2Subnet2EA1B524
    Metadata:
      aws:cdk:path: PresenceStack/PresenceVPC/RedisSubnet2/RouteTableAssociation
  PresenceVPCLambdaSubnet1Subnet99C81E1C:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.42.2.0/24
      VpcId:
        Ref: PresenceVPC5404FC46
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Lambda
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: PresenceStack/PresenceVPC/LambdaSubnet1
    Metadata:
      aws:cdk:path: PresenceStack/PresenceVPC/LambdaSubnet1/Subnet
  PresenceVPCLambdaSubnet1RouteTable3AF87A21:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: PresenceVPC5404FC46
      Tags:
        - Key: Name
          Value: PresenceStack/PresenceVPC/LambdaSubnet1
    Metadata:
      aws:cdk:path: PresenceStack/PresenceVPC/LambdaSubnet1/RouteTable
  PresenceVPCLambdaSubnet1RouteTableAssociation7A0FE804:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PresenceVPCLambdaSubnet1RouteTable3AF87A21
      SubnetId:
        Ref: PresenceVPCLambdaSubnet1Subnet99C81E1C
    Metadata:
      aws:cdk:path: PresenceStack/PresenceVPC/LambdaSubnet1/RouteTableAssociation
  PresenceVPCLambdaSubnet2Subnet5C09EBC3:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.42.3.0/24
      VpcId:
        Ref: PresenceVPC5404FC46
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Lambda
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: PresenceStack/PresenceVPC/LambdaSubnet2
    Metadata:
      aws:cdk:path: PresenceStack/PresenceVPC/LambdaSubnet2/Subnet
  PresenceVPCLambdaSubnet2RouteTableB11EF8D3:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: PresenceVPC5404FC46
      Tags:
        - Key: Name
          Value: PresenceStack/PresenceVPC/LambdaSubnet2
    Metadata:
      aws:cdk:path: PresenceStack/PresenceVPC/LambdaSubnet2/RouteTable
  PresenceVPCLambdaSubnet2RouteTableAssociation0C3EF9B3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: PresenceVPCLambdaSubnet2RouteTableB11EF8D3
      SubnetId:
        Ref: PresenceVPCLambdaSubnet2Subnet5C09EBC3
    Metadata:
      aws:cdk:path: PresenceStack/PresenceVPC/LambdaSubnet2/RouteTableAssociation
  PresenceVPCeventsEndPoint682C555D:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName:
        Fn::Join:
          - ""
          - - com.amazonaws.
            - Ref: AWS::Region
            - .events
      VpcId:
        Ref: PresenceVPC5404FC46
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - Fn::GetAtt:
            - eventsEndPointSG1AD6A545
            - GroupId
      SubnetIds:
        - Ref: PresenceVPCLambdaSubnet1Subnet99C81E1C
        - Ref: PresenceVPCLambdaSubnet2Subnet5C09EBC3
      VpcEndpointType: Interface
    Metadata:
      aws:cdk:path: PresenceStack/PresenceVPC/eventsEndPoint/Resource
  redisSg025198AC:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Redis Cluster
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: PresenceVPC5404FC46
    Metadata:
      aws:cdk:path: PresenceStack/redisSg/Resource
  redisSgfromPresenceStacklambdaSgDAB0B1E26379F6EBF448:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from PresenceStacklambdaSgDAB0B1E2:6379
      FromPort: 6379
      GroupId:
        Fn::GetAtt:
          - redisSg025198AC
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - lambdaSgD8D93E20
          - GroupId
      ToPort: 6379
    Metadata:
      aws:cdk:path: PresenceStack/redisSg/from PresenceStacklambdaSgDAB0B1E2:6379
  lambdaSgD8D93E20:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Lambda functions
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: PresenceVPC5404FC46
    Metadata:
      aws:cdk:path: PresenceStack/lambdaSg/Resource
  RedisSubnets:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: Subnet Group for Redis Cluster
      SubnetIds:
        - Ref: PresenceVPCRedisSubnet1Subnet08262FF3
        - Ref: PresenceVPCRedisSubnet2Subnet2EA1B524
      CacheSubnetGroupName: RedisSubnets
    Metadata:
      aws:cdk:path: PresenceStack/RedisSubnets
  PresenceCluster:
    Type: AWS::ElastiCache::ReplicationGroup
    Properties:
      ReplicationGroupDescription: PresenceReplicationGroup
      AutomaticFailoverEnabled: true
      CacheNodeType: cache.t3.small
      CacheSubnetGroupName:
        Ref: RedisSubnets
      Engine: redis
      MultiAZEnabled: true
      NumCacheClusters: 2
      Port: 6379
      SecurityGroupIds:
        - Fn::GetAtt:
            - redisSg025198AC
            - GroupId
    Metadata:
      aws:cdk:path: PresenceStack/PresenceCluster
  redisModule3972F6F0:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content:
        S3Bucket:
          Ref: AssetParameters063deca7b10324b4189c00499277536cd3841b65d793fd398c5d9091b62cdf8dS3BucketB991789E
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters063deca7b10324b4189c00499277536cd3841b65d793fd398c5d9091b62cdf8dS3VersionKey1BBF868D
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters063deca7b10324b4189c00499277536cd3841b65d793fd398c5d9091b62cdf8dS3VersionKey1BBF868D
      CompatibleRuntimes:
        - nodejs12.x
      LayerName: presenceLayer
    Metadata:
      aws:cdk:path: PresenceStack/redisModule/Resource
      aws:asset:path: asset.063deca7b10324b4189c00499277536cd3841b65d793fd398c5d9091b62cdf8d
      aws:asset:property: Content
  heartbeatServiceRoleD63C9062:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    Metadata:
      aws:cdk:path: PresenceStack/heartbeat/ServiceRole/Resource
  heartbeatServiceRoleDefaultPolicy2B328071:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: events:PutEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - PresenceBus5D952912
                - Arn
        Version: "2012-10-17"
      PolicyName: heartbeatServiceRoleDefaultPolicy2B328071
      Roles:
        - Ref: heartbeatServiceRoleD63C9062
    Metadata:
      aws:cdk:path: PresenceStack/heartbeat/ServiceRole/DefaultPolicy/Resource
  heartbeat8A8E5472:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersf079b2a4c6da4d3ca9c671dd8e2e2fdebca4a20d23620bff5a7812a6c937f215S3BucketE31386F4
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersf079b2a4c6da4d3ca9c671dd8e2e2fdebca4a20d23620bff5a7812a6c937f215S3VersionKey4A53E7DC
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersf079b2a4c6da4d3ca9c671dd8e2e2fdebca4a20d23620bff5a7812a6c937f215S3VersionKey4A53E7DC
      Handler: heartbeat.handler
      Role:
        Fn::GetAtt:
          - heartbeatServiceRoleD63C9062
          - Arn
      Runtime: nodejs12.x
      Environment:
        Variables:
          REDIS_HOST:
            Fn::GetAtt:
              - PresenceCluster
              - PrimaryEndPoint.Address
          REDIS_PORT:
            Fn::GetAtt:
              - PresenceCluster
              - PrimaryEndPoint.Port
          EVENT_BUS:
            Ref: PresenceBus5D952912
      Layers:
        - Ref: redisModule3972F6F0
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - lambdaSgD8D93E20
              - GroupId
        SubnetIds:
          - Ref: PresenceVPCLambdaSubnet1Subnet99C81E1C
          - Ref: PresenceVPCLambdaSubnet2Subnet5C09EBC3
    DependsOn:
      - heartbeatServiceRoleDefaultPolicy2B328071
      - heartbeatServiceRoleD63C9062
    Metadata:
      aws:cdk:path: PresenceStack/heartbeat/Resource
      aws:asset:path: asset.f079b2a4c6da4d3ca9c671dd8e2e2fdebca4a20d23620bff5a7812a6c937f215
      aws:asset:property: Code
  statusServiceRole987113E6:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    Metadata:
      aws:cdk:path: PresenceStack/status/ServiceRole/Resource
  status13EA9EF7:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameterse7c2e97bcd4582228ec8dd10da4dc5d4e849bc46db1d10dca6f1d193fb37313bS3BucketF76B34D0
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterse7c2e97bcd4582228ec8dd10da4dc5d4e849bc46db1d10dca6f1d193fb37313bS3VersionKey9F5821A9
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterse7c2e97bcd4582228ec8dd10da4dc5d4e849bc46db1d10dca6f1d193fb37313bS3VersionKey9F5821A9
      Handler: status.handler
      Role:
        Fn::GetAtt:
          - statusServiceRole987113E6
          - Arn
      Runtime: nodejs12.x
      Environment:
        Variables:
          REDIS_HOST:
            Fn::GetAtt:
              - PresenceCluster
              - PrimaryEndPoint.Address
          REDIS_PORT:
            Fn::GetAtt:
              - PresenceCluster
              - PrimaryEndPoint.Port
      Layers:
        - Ref: redisModule3972F6F0
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - lambdaSgD8D93E20
              - GroupId
        SubnetIds:
          - Ref: PresenceVPCLambdaSubnet1Subnet99C81E1C
          - Ref: PresenceVPCLambdaSubnet2Subnet5C09EBC3
    DependsOn:
      - statusServiceRole987113E6
    Metadata:
      aws:cdk:path: PresenceStack/status/Resource
      aws:asset:path: asset.e7c2e97bcd4582228ec8dd10da4dc5d4e849bc46db1d10dca6f1d193fb37313b
      aws:asset:property: Code
  disconnectServiceRole372F5647:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    Metadata:
      aws:cdk:path: PresenceStack/disconnect/ServiceRole/Resource
  disconnectServiceRoleDefaultPolicy43698ECC:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: events:PutEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - PresenceBus5D952912
                - Arn
        Version: "2012-10-17"
      PolicyName: disconnectServiceRoleDefaultPolicy43698ECC
      Roles:
        - Ref: disconnectServiceRole372F5647
    Metadata:
      aws:cdk:path: PresenceStack/disconnect/ServiceRole/DefaultPolicy/Resource
  disconnect829B70D0:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters54936929c763051376e12ee4766e5af7e5cdc8b7857cd3e4189712ed96b62800S3Bucket92B6310F
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters54936929c763051376e12ee4766e5af7e5cdc8b7857cd3e4189712ed96b62800S3VersionKey01A942A8
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters54936929c763051376e12ee4766e5af7e5cdc8b7857cd3e4189712ed96b62800S3VersionKey01A942A8
      Handler: disconnect.handler
      Role:
        Fn::GetAtt:
          - disconnectServiceRole372F5647
          - Arn
      Runtime: nodejs12.x
      Environment:
        Variables:
          REDIS_HOST:
            Fn::GetAtt:
              - PresenceCluster
              - PrimaryEndPoint.Address
          REDIS_PORT:
            Fn::GetAtt:
              - PresenceCluster
              - PrimaryEndPoint.Port
          EVENT_BUS:
            Ref: PresenceBus5D952912
      Layers:
        - Ref: redisModule3972F6F0
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - lambdaSgD8D93E20
              - GroupId
        SubnetIds:
          - Ref: PresenceVPCLambdaSubnet1Subnet99C81E1C
          - Ref: PresenceVPCLambdaSubnet2Subnet5C09EBC3
    DependsOn:
      - disconnectServiceRoleDefaultPolicy43698ECC
      - disconnectServiceRole372F5647
    Metadata:
      aws:cdk:path: PresenceStack/disconnect/Resource
      aws:asset:path: asset.54936929c763051376e12ee4766e5af7e5cdc8b7857cd3e4189712ed96b62800
      aws:asset:property: Code
  timeoutServiceRole175F298C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    Metadata:
      aws:cdk:path: PresenceStack/timeout/ServiceRole/Resource
  timeoutServiceRoleDefaultPolicyC545BCB2:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: events:PutEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - PresenceBus5D952912
                - Arn
        Version: "2012-10-17"
      PolicyName: timeoutServiceRoleDefaultPolicyC545BCB2
      Roles:
        - Ref: timeoutServiceRole175F298C
    Metadata:
      aws:cdk:path: PresenceStack/timeout/ServiceRole/DefaultPolicy/Resource
  timeoutD1A38E79:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersa20088857f6e015bad4248587ee105bbbed6216b24d6b7609aadfa6eb79b8498S3BucketAFCFCDE9
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersa20088857f6e015bad4248587ee105bbbed6216b24d6b7609aadfa6eb79b8498S3VersionKeyF8B11B32
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersa20088857f6e015bad4248587ee105bbbed6216b24d6b7609aadfa6eb79b8498S3VersionKeyF8B11B32
      Handler: timeout.handler
      Role:
        Fn::GetAtt:
          - timeoutServiceRole175F298C
          - Arn
      Runtime: nodejs12.x
      Environment:
        Variables:
          REDIS_HOST:
            Fn::GetAtt:
              - PresenceCluster
              - PrimaryEndPoint.Address
          REDIS_PORT:
            Fn::GetAtt:
              - PresenceCluster
              - PrimaryEndPoint.Port
          TIMEOUT: "10000"
          EVENT_BUS:
            Ref: PresenceBus5D952912
      Layers:
        - Ref: redisModule3972F6F0
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - lambdaSgD8D93E20
              - GroupId
        SubnetIds:
          - Ref: PresenceVPCLambdaSubnet1Subnet99C81E1C
          - Ref: PresenceVPCLambdaSubnet2Subnet5C09EBC3
    DependsOn:
      - timeoutServiceRoleDefaultPolicyC545BCB2
      - timeoutServiceRole175F298C
    Metadata:
      aws:cdk:path: PresenceStack/timeout/Resource
      aws:asset:path: asset.a20088857f6e015bad4248587ee105bbbed6216b24d6b7609aadfa6eb79b8498
      aws:asset:property: Code
  timeoutAllowEventRulePresenceStackPresenceTimeoutRuleD3F99EA33C0FE864:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - timeoutD1A38E79
          - Arn
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - PresenceTimeoutRuleFC1C372B
          - Arn
    Metadata:
      aws:cdk:path: PresenceStack/timeout/AllowEventRulePresenceStackPresenceTimeoutRuleD3F99EA3
  ondisconnectServiceRoleC1A63C53:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: PresenceStack/on_disconnect/ServiceRole/Resource
  ondisconnectServiceRoleDefaultPolicy4D06E5F1:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: appsync:GraphQL
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - PresenceAPI097D0E1D
                      - Arn
                  - /*
        Version: "2012-10-17"
      PolicyName: ondisconnectServiceRoleDefaultPolicy4D06E5F1
      Roles:
        - Ref: ondisconnectServiceRoleC1A63C53
    Metadata:
      aws:cdk:path: PresenceStack/on_disconnect/ServiceRole/DefaultPolicy/Resource
  ondisconnect006B6FED:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters235b434184d8caa60ac353836c86e279be6b7d85ff9264ce2b0e849ab7e6f294S3Bucket046467FD
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters235b434184d8caa60ac353836c86e279be6b7d85ff9264ce2b0e849ab7e6f294S3VersionKey38A1484A
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters235b434184d8caa60ac353836c86e279be6b7d85ff9264ce2b0e849ab7e6f294S3VersionKey38A1484A
      Handler: on_disconnect.handler
      Role:
        Fn::GetAtt:
          - ondisconnectServiceRoleC1A63C53
          - Arn
      Runtime: nodejs12.x
      Environment:
        Variables:
          GRAPHQL_ENDPOINT:
            Fn::GetAtt:
              - PresenceAPI097D0E1D
              - GraphQLUrl
    DependsOn:
      - ondisconnectServiceRoleDefaultPolicy4D06E5F1
      - ondisconnectServiceRoleC1A63C53
    Metadata:
      aws:cdk:path: PresenceStack/on_disconnect/Resource
      aws:asset:path: asset.235b434184d8caa60ac353836c86e279be6b7d85ff9264ce2b0e849ab7e6f294
      aws:asset:property: Code
  ondisconnectAllowEventRulePresenceStackPresenceDisconnectRuleA03863F863D0B9BB:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ondisconnect006B6FED
          - Arn
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - PresenceDisconnectRule61912715
          - Arn
    Metadata:
      aws:cdk:path: PresenceStack/on_disconnect/AllowEventRulePresenceStackPresenceDisconnectRuleA03863F8
  PresenceAPIApiLogsRole892F61D3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSAppSyncPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: PresenceStack/PresenceAPI/ApiLogsRole/Resource
  PresenceAPI097D0E1D:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      AuthenticationType: API_KEY
      Name: PresenceAPI
      AdditionalAuthenticationProviders:
        - AuthenticationType: AWS_IAM
      LogConfig:
        CloudWatchLogsRoleArn:
          Fn::GetAtt:
            - PresenceAPIApiLogsRole892F61D3
            - Arn
        FieldLogLevel: ALL
    Metadata:
      aws:cdk:path: PresenceStack/PresenceAPI/Resource
  PresenceAPISchemaB664B62D:
    Type: AWS::AppSync::GraphQLSchema
    Properties:
      ApiId:
        Fn::GetAtt:
          - PresenceAPI097D0E1D
          - ApiId
      Definition: >
        schema {
          query: Query
          mutation: Mutation
          subscription: Subscription
        }

        enum Status {
          online
          offline
        }

        type Change @aws_iam @aws_api_key {
          id: ID!
          status: Status!
        }

        type Query {
          heartbeat(id: ID!): Change
          status(id: ID!): Change
        }

        type Mutation {
          connect(id: ID!): Change
          disconnect(id: ID!): Change
          disconnected(id: ID!): Change
          @aws_iam
        }

        type Subscription {
          onStatus(id: ID!): Change
          @aws_subscribe(mutations: ["connect", "disconnected"])
        }
    Metadata:
      aws:cdk:path: PresenceStack/PresenceAPI/Schema
  PresenceAPIPresenceKeyApiKeyFA1C760A:
    Type: AWS::AppSync::ApiKey
    Properties:
      ApiId:
        Fn::GetAtt:
          - PresenceAPI097D0E1D
          - ApiId
    DependsOn:
      - PresenceAPISchemaB664B62D
    Metadata:
      aws:cdk:path: PresenceStack/PresenceAPI/PresenceKeyApiKey
  PresenceAPIheartbeatDSServiceRole8F401150:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: PresenceStack/PresenceAPI/heartbeatDS/ServiceRole/Resource
  PresenceAPIheartbeatDSServiceRoleDefaultPolicy04B94A47:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - heartbeat8A8E5472
                - Arn
        Version: "2012-10-17"
      PolicyName: PresenceAPIheartbeatDSServiceRoleDefaultPolicy04B94A47
      Roles:
        - Ref: PresenceAPIheartbeatDSServiceRole8F401150
    Metadata:
      aws:cdk:path: PresenceStack/PresenceAPI/heartbeatDS/ServiceRole/DefaultPolicy/Resource
  PresenceAPIheartbeatDS73E9B382:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
          - PresenceAPI097D0E1D
          - ApiId
      Name: heartbeatDS
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
            - heartbeat8A8E5472
            - Arn
      ServiceRoleArn:
        Fn::GetAtt:
          - PresenceAPIheartbeatDSServiceRole8F401150
          - Arn
    Metadata:
      aws:cdk:path: PresenceStack/PresenceAPI/heartbeatDS/Resource
  PresenceAPIheartbeatDSQueryheartbeatResolver5E0CB2B3:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - PresenceAPI097D0E1D
          - ApiId
      FieldName: heartbeat
      TypeName: Query
      DataSourceName: heartbeatDS
      Kind: UNIT
    DependsOn:
      - PresenceAPIheartbeatDS73E9B382
      - PresenceAPISchemaB664B62D
    Metadata:
      aws:cdk:path: PresenceStack/PresenceAPI/heartbeatDS/QueryheartbeatResolver/Resource
  PresenceAPIheartbeatDSMutationconnectResolver537D2CEA:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - PresenceAPI097D0E1D
          - ApiId
      FieldName: connect
      TypeName: Mutation
      DataSourceName: heartbeatDS
      Kind: UNIT
    DependsOn:
      - PresenceAPIheartbeatDS73E9B382
      - PresenceAPISchemaB664B62D
    Metadata:
      aws:cdk:path: PresenceStack/PresenceAPI/heartbeatDS/MutationconnectResolver/Resource
  PresenceAPIstatusDSServiceRole1B0479EF:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: PresenceStack/PresenceAPI/statusDS/ServiceRole/Resource
  PresenceAPIstatusDSServiceRoleDefaultPolicy0C979BD8:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - status13EA9EF7
                - Arn
        Version: "2012-10-17"
      PolicyName: PresenceAPIstatusDSServiceRoleDefaultPolicy0C979BD8
      Roles:
        - Ref: PresenceAPIstatusDSServiceRole1B0479EF
    Metadata:
      aws:cdk:path: PresenceStack/PresenceAPI/statusDS/ServiceRole/DefaultPolicy/Resource
  PresenceAPIstatusDSD3865C08:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
          - PresenceAPI097D0E1D
          - ApiId
      Name: statusDS
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
            - status13EA9EF7
            - Arn
      ServiceRoleArn:
        Fn::GetAtt:
          - PresenceAPIstatusDSServiceRole1B0479EF
          - Arn
    Metadata:
      aws:cdk:path: PresenceStack/PresenceAPI/statusDS/Resource
  PresenceAPIstatusDSQuerystatusResolver0F8E4FA8:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - PresenceAPI097D0E1D
          - ApiId
      FieldName: status
      TypeName: Query
      DataSourceName: statusDS
      Kind: UNIT
    DependsOn:
      - PresenceAPISchemaB664B62D
      - PresenceAPIstatusDSD3865C08
    Metadata:
      aws:cdk:path: PresenceStack/PresenceAPI/statusDS/QuerystatusResolver/Resource
  PresenceAPIdisconnectDSServiceRoleE16B55D6:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: PresenceStack/PresenceAPI/disconnectDS/ServiceRole/Resource
  PresenceAPIdisconnectDSServiceRoleDefaultPolicyE246A046:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - disconnect829B70D0
                - Arn
        Version: "2012-10-17"
      PolicyName: PresenceAPIdisconnectDSServiceRoleDefaultPolicyE246A046
      Roles:
        - Ref: PresenceAPIdisconnectDSServiceRoleE16B55D6
    Metadata:
      aws:cdk:path: PresenceStack/PresenceAPI/disconnectDS/ServiceRole/DefaultPolicy/Resource
  PresenceAPIdisconnectDS924FC7F3:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
          - PresenceAPI097D0E1D
          - ApiId
      Name: disconnectDS
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
            - disconnect829B70D0
            - Arn
      ServiceRoleArn:
        Fn::GetAtt:
          - PresenceAPIdisconnectDSServiceRoleE16B55D6
          - Arn
    Metadata:
      aws:cdk:path: PresenceStack/PresenceAPI/disconnectDS/Resource
  PresenceAPIdisconnectDSMutationdisconnectResolverA809BE03:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - PresenceAPI097D0E1D
          - ApiId
      FieldName: disconnect
      TypeName: Mutation
      DataSourceName: disconnectDS
      Kind: UNIT
    DependsOn:
      - PresenceAPIdisconnectDS924FC7F3
      - PresenceAPISchemaB664B62D
    Metadata:
      aws:cdk:path: PresenceStack/PresenceAPI/disconnectDS/MutationdisconnectResolver/Resource
  PresenceAPIdisconnectedDS28B6D0E3:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
          - PresenceAPI097D0E1D
          - ApiId
      Name: disconnectedDS
      Type: NONE
    Metadata:
      aws:cdk:path: PresenceStack/PresenceAPI/disconnectedDS/Resource
  PresenceAPIdisconnectedDSMutationdisconnectedResolver9E27C20C:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - PresenceAPI097D0E1D
          - ApiId
      FieldName: disconnected
      TypeName: Mutation
      DataSourceName: disconnectedDS
      Kind: UNIT
      RequestMappingTemplate: "

        \      {

        \        \"version\": \"2017-02-28\",

        \        \"payload\": {

        \          \"id\": \"$context.arguments.id\",

        \          \"status\": \"offline\"

        \        }       \ 

        \      }

        \    "
      ResponseMappingTemplate: "

        \      $util.toJson($context.result)

        \    "
    DependsOn:
      - PresenceAPIdisconnectedDS28B6D0E3
      - PresenceAPISchemaB664B62D
    Metadata:
      aws:cdk:path: PresenceStack/PresenceAPI/disconnectedDS/MutationdisconnectedResolver/Resource
  PresenceBus5D952912:
    Type: AWS::Events::EventBus
    Properties:
      Name: PresenceStackPresenceBusBB0A83F7
    Metadata:
      aws:cdk:path: PresenceStack/PresenceBus/Resource
  PresenceTimeoutRuleFC1C372B:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: cron(* * * * ? *)
      State: ENABLED
      Targets:
        - Arn:
            Fn::GetAtt:
              - timeoutD1A38E79
              - Arn
          Id: Target0
    Metadata:
      aws:cdk:path: PresenceStack/PresenceTimeoutRule/Resource
  PresenceDisconnectRule61912715:
    Type: AWS::Events::Rule
    Properties:
      Description: Rule for presence disconnection
      EventBusName:
        Ref: PresenceBus5D952912
      EventPattern:
        detail-type:
          - presence.disconnected
        source:
          - api.presence
      State: ENABLED
      Targets:
        - Arn:
            Fn::GetAtt:
              - ondisconnect006B6FED
              - Arn
          Id: Target0
    Metadata:
      aws:cdk:path: PresenceStack/PresenceDisconnectRule/Resource
  eventsEndPointSG1AD6A545:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EventBrige interface endpoint SG
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp:
            Fn::GetAtt:
              - PresenceVPC5404FC46
              - CidrBlock
          Description:
            Fn::Join:
              - ""
              - - "from "
                - Fn::GetAtt:
                    - PresenceVPC5404FC46
                    - CidrBlock
                - :443
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      VpcId:
        Ref: PresenceVPC5404FC46
    Metadata:
      aws:cdk:path: PresenceStack/eventsEndPointSG/Resource
  eventsEndPointSGfromPresenceStacklambdaSgDAB0B1E280635940B3:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from PresenceStacklambdaSgDAB0B1E2:80
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - eventsEndPointSG1AD6A545
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - lambdaSgD8D93E20
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: PresenceStack/eventsEndPointSG/from PresenceStacklambdaSgDAB0B1E2:80
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=1.68.0,@aws-cdk/assets=1.68.0,@aws-cdk/aws-applicationautoscaling=1.68.0,@aws-cdk/aws-appsync=1.68.0,@aws-cdk/aws-autoscaling=1.68.0,@aws-cdk/aws-autoscaling-common=1.68.0,@aws-cdk/aws-autoscaling-hooktargets=1.68.0,@aws-cdk/aws-cloudwatch=1.68.0,@aws-cdk/aws-codeguruprofiler=1.68.0,@aws-cdk/aws-ec2=1.68.0,@aws-cdk/aws-ecr=1.68.0,@aws-cdk/aws-ecr-assets=1.68.0,@aws-cdk/aws-ecs=1.68.0,@aws-cdk/aws-elasticache=1.68.0,@aws-cdk/aws-elasticloadbalancingv2=1.68.0,@aws-cdk/aws-events=1.68.0,@aws-cdk/aws-events-targets=1.68.0,@aws-cdk/aws-iam=1.68.0,@aws-cdk/aws-kms=1.68.0,@aws-cdk/aws-lambda=1.68.0,@aws-cdk/aws-logs=1.68.0,@aws-cdk/aws-s3=1.68.0,@aws-cdk/aws-s3-assets=1.68.0,@aws-cdk/aws-servicediscovery=1.68.0,@aws-cdk/aws-sns=1.68.0,@aws-cdk/aws-sns-subscriptions=1.68.0,@aws-cdk/aws-sqs=1.68.0,@aws-cdk/aws-ssm=1.68.0,@aws-cdk/cloud-assembly-schema=1.68.0,@aws-cdk/core=1.68.0,@aws-cdk/custom-resources=1.68.0,@aws-cdk/cx-api=1.68.0,@aws-cdk/region-info=1.68.0,jsii-runtime=node.js/v12.16.3
    Metadata:
      aws:cdk:path: PresenceStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  AssetParameters063deca7b10324b4189c00499277536cd3841b65d793fd398c5d9091b62cdf8dS3BucketB991789E:
    Type: String
    Description: S3 bucket for asset "063deca7b10324b4189c00499277536cd3841b65d793fd398c5d9091b62cdf8d"
  AssetParameters063deca7b10324b4189c00499277536cd3841b65d793fd398c5d9091b62cdf8dS3VersionKey1BBF868D:
    Type: String
    Description: S3 key for asset version "063deca7b10324b4189c00499277536cd3841b65d793fd398c5d9091b62cdf8d"
  AssetParameters063deca7b10324b4189c00499277536cd3841b65d793fd398c5d9091b62cdf8dArtifactHash8F248323:
    Type: String
    Description: Artifact hash for asset "063deca7b10324b4189c00499277536cd3841b65d793fd398c5d9091b62cdf8d"
  AssetParametersf079b2a4c6da4d3ca9c671dd8e2e2fdebca4a20d23620bff5a7812a6c937f215S3BucketE31386F4:
    Type: String
    Description: S3 bucket for asset "f079b2a4c6da4d3ca9c671dd8e2e2fdebca4a20d23620bff5a7812a6c937f215"
  AssetParametersf079b2a4c6da4d3ca9c671dd8e2e2fdebca4a20d23620bff5a7812a6c937f215S3VersionKey4A53E7DC:
    Type: String
    Description: S3 key for asset version "f079b2a4c6da4d3ca9c671dd8e2e2fdebca4a20d23620bff5a7812a6c937f215"
  AssetParametersf079b2a4c6da4d3ca9c671dd8e2e2fdebca4a20d23620bff5a7812a6c937f215ArtifactHashF42E207F:
    Type: String
    Description: Artifact hash for asset "f079b2a4c6da4d3ca9c671dd8e2e2fdebca4a20d23620bff5a7812a6c937f215"
  AssetParameterse7c2e97bcd4582228ec8dd10da4dc5d4e849bc46db1d10dca6f1d193fb37313bS3BucketF76B34D0:
    Type: String
    Description: S3 bucket for asset "e7c2e97bcd4582228ec8dd10da4dc5d4e849bc46db1d10dca6f1d193fb37313b"
  AssetParameterse7c2e97bcd4582228ec8dd10da4dc5d4e849bc46db1d10dca6f1d193fb37313bS3VersionKey9F5821A9:
    Type: String
    Description: S3 key for asset version "e7c2e97bcd4582228ec8dd10da4dc5d4e849bc46db1d10dca6f1d193fb37313b"
  AssetParameterse7c2e97bcd4582228ec8dd10da4dc5d4e849bc46db1d10dca6f1d193fb37313bArtifactHash9A71AB07:
    Type: String
    Description: Artifact hash for asset "e7c2e97bcd4582228ec8dd10da4dc5d4e849bc46db1d10dca6f1d193fb37313b"
  AssetParameters54936929c763051376e12ee4766e5af7e5cdc8b7857cd3e4189712ed96b62800S3Bucket92B6310F:
    Type: String
    Description: S3 bucket for asset "54936929c763051376e12ee4766e5af7e5cdc8b7857cd3e4189712ed96b62800"
  AssetParameters54936929c763051376e12ee4766e5af7e5cdc8b7857cd3e4189712ed96b62800S3VersionKey01A942A8:
    Type: String
    Description: S3 key for asset version "54936929c763051376e12ee4766e5af7e5cdc8b7857cd3e4189712ed96b62800"
  AssetParameters54936929c763051376e12ee4766e5af7e5cdc8b7857cd3e4189712ed96b62800ArtifactHash49126304:
    Type: String
    Description: Artifact hash for asset "54936929c763051376e12ee4766e5af7e5cdc8b7857cd3e4189712ed96b62800"
  AssetParametersa20088857f6e015bad4248587ee105bbbed6216b24d6b7609aadfa6eb79b8498S3BucketAFCFCDE9:
    Type: String
    Description: S3 bucket for asset "a20088857f6e015bad4248587ee105bbbed6216b24d6b7609aadfa6eb79b8498"
  AssetParametersa20088857f6e015bad4248587ee105bbbed6216b24d6b7609aadfa6eb79b8498S3VersionKeyF8B11B32:
    Type: String
    Description: S3 key for asset version "a20088857f6e015bad4248587ee105bbbed6216b24d6b7609aadfa6eb79b8498"
  AssetParametersa20088857f6e015bad4248587ee105bbbed6216b24d6b7609aadfa6eb79b8498ArtifactHashF4A697D7:
    Type: String
    Description: Artifact hash for asset "a20088857f6e015bad4248587ee105bbbed6216b24d6b7609aadfa6eb79b8498"
  AssetParameters235b434184d8caa60ac353836c86e279be6b7d85ff9264ce2b0e849ab7e6f294S3Bucket046467FD:
    Type: String
    Description: S3 bucket for asset "235b434184d8caa60ac353836c86e279be6b7d85ff9264ce2b0e849ab7e6f294"
  AssetParameters235b434184d8caa60ac353836c86e279be6b7d85ff9264ce2b0e849ab7e6f294S3VersionKey38A1484A:
    Type: String
    Description: S3 key for asset version "235b434184d8caa60ac353836c86e279be6b7d85ff9264ce2b0e849ab7e6f294"
  AssetParameters235b434184d8caa60ac353836c86e279be6b7d85ff9264ce2b0e849ab7e6f294ArtifactHash0AF8559A:
    Type: String
    Description: Artifact hash for asset "235b434184d8caa60ac353836c86e279be6b7d85ff9264ce2b0e849ab7e6f294"
Outputs:
  presenceapi:
    Description: Presence api endpoint
    Value:
      Fn::GetAtt:
        - PresenceAPI097D0E1D
        - GraphQLUrl
    Export:
      Name: presenceEndpoint
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

